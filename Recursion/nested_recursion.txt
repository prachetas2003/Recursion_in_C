#include <stdio.h>

int fA(int n){
    if (n >100)
     return n-10;
    else
     return fA(fA(n+11));
}

int main()
{
    int b =fA(95);
    printf("%d",b);

    return 0;
}


Recursive Call Explanation:
fA(95):
Since 95 is not greater than 100, we go to the else branch.
This leads to fA(fA(95 + 11)) which simplifies to fA(fA(106)).
|
|
"
fA(106):
Now 106 is greater than 100, so we return 106 - 10 = 96.
So, fA(95) becomes fA(96).
|
|
"
fA(96):
Since 96 is not greater than 100, we go to the else branch again.
This leads to fA(fA(96 + 11)) which simplifies to fA(fA(107)).
|
|
"
fA(107):
Now 107 is greater than 100, so we return 107 - 10 = 97.
So, fA(96) becomes fA(97).
|
|
"
fA(97):
Since 97 is not greater than 100, this leads to fA(fA(97 + 11)) which is fA(fA(108)).
|
|
"
fA(108):
108 is greater than 100, so we return 108 - 10 = 98.
So, fA(97) becomes fA(98).
|
|
"
fA(98):
This leads to fA(fA(98 + 11)) which is fA(fA(109)).
|
|
"
fA(109):
109 is greater than 100, so we return 109 - 10 = 99.
So, fA(98) becomes fA(99).
|
|
"
fA(99):
This leads to fA(fA(99 + 11)) which is fA(fA(110)).
|
|
"
fA(110):
110 is greater than 100, so we return 110 - 10 = 100.
So, fA(99) becomes fA(100).
|
|
"
fA(100):
This leads to fA(fA(100 + 11)) which is fA(fA(111)).
|
|
"
fA(111):
111 is greater than 100, so we return 111 - 10 = 101.
So, fA(100) becomes fA(101).
|
|
"
fA(101):
101 is greater than 100, so we return 101 - 10 = 91.